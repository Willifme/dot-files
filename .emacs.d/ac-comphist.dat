((("car" .
   [4 0 0])
  ("fibo" .
   [3 0 0 0])
  ("example-func" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("hello-world" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("auto-save-default" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("unless" .
   [1 0 0 0 0 0])
  ("display-graphic-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("hello" .
   [6 0 0 0 0])
  ("input" .
   [2 0 0 0 0])
  ("make-backup-files" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("custom-theme-" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("load-theme" .
   [2 0 0 0 0 0 0 0 0 0])
  ("nil" .
   [2 0 0])
  ("make-backup-file" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("setq" .
   [5 0 0 0])
  ("linum-mode" .
   [1 0 0 0 0 0 0 0 0 0])
  ("evil-insert" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("when" .
   [3 0 0 0])
  ("boundp" .
   [1 0 0 0 0 0])
  ("evil-normal-state-minor-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("print" .
   [33 0 0 0 0])
  ("bound-and-true-p" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("progn" .
   [1 0 0 0 0])
  ("require" .
   [2 0 0 0 0 0 0])
  ("linum-relative" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0 0])
  ("global-linum-mode" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("asdf" .
   [1 0 0 0])
  ("constructor" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("console" .
   [1 0 0 0 0 0 1])
  ("log" .
   [2 0 0])
  ("Example" .
   [1 0 0 0 0 0 0])
  ("div" .
   [1 0 0])
  ("not" .
   [4 0 0])
  ("if" .
   [2 0])
  ("evil-normal-state-entry-hook" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("evil-normal-state-map" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("load" .
   [1 0 0 0])
  ("add-to-list" .
   [1 0 0 0 0 0 0 0 0 0 1])
  ("custom-theme-load-path" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0])
  ("helm-config" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("add-hook" .
   [1 0 0 0 0 0 0 0])
  ("lisp-mode" .
   [1 0 0 0 0 0 0 0 0])
  ("lisp-mode-hook" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("enable-paredit-mode" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("let" .
   [1 0 0])
  ("defun" .
   [6 0 0 0 0])
  ("name" .
   [1 0 0 0])
  ("thing" .
   [1 0 0 0 0])
  ("example" .
   [5 0 0 0 0 0 0])
  ("fibonacci" .
   [0 0 8 2 1 0 0 0 0])
  ("return-from" .
   [1 0 0 0 0 0 2 0 0 0 0])))
