((("Printf.printf" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("merlin-mode" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("tuareg-mode-hook" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("utop-setup-ocaml-buffer" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("OCaml" .
   [1 0 0 0 0])
  ("autoload" .
   [0 0 0 0 0 0 0 1])
  ("append" .
   [1 0 0 0 0 0])
  ("auto-mode-alist" .
   [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("tuareg-mode" .
   [0 0 1 2 0 0 0 0 1 0 1])
  ("T_Comma" .
   [1 0 0 0 0 0 0])
  ("TOKEN" .
   [1 0 0 0 0])
  ("return" .
   [1 0 0 0 0 0])
  ("statement" .
   [2 0 0 0 0 0 0 0 0])
  ("param_list" .
   [2 0 0 0 0 0 0 0 0 0])
  ("T_RBracket" .
   [0 0 0 0 1 0 0 0 0 0])
  ("T_LBracket" .
   [0 0 0 0 1 0 0 0 0 0])
  ("T_Identifier" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("func_call" .
   [1 0 0 0 0 0 0 0 0])
  ("string" .
   [1 0 0 0 0 0])
  ("IDENTIFIER" .
   [1 0 0 0 0 0 0 0 0 0])
  ("bool" .
   [2 0 0 0])
  ("make_block_node" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("free" .
   [5 0 1 0])
  ("blocknode" .
   [8 0 0 0 0 0 0 0 0])
  ("BLOCK" .
   [4 0 0 0 0])
  ("BlockNode" .
   [3 0 0 0 0 0 0 0 0])
  ("Node" .
   [8 0 0 0])
  ("make_statement_list" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("expression" .
   [1 0 0 0 0 0 0 0 0 0])
  ("block" .
   [3 0 0 0 0])
  ("main" .
   [1 0 0 0])
  ("indent" .
   [14 0 0 0 0 0])
  ("NULL" .
   [15 0 0 0])
  ("arg2" .
   [7 0 0 0])
  ("node" .
   [29 0 0 0])
  ("$1" .
   [5 0])
  ("arg1" .
   [5 0 0 0])
  ("statementlist" .
   [7 0 0 0 0 0 0 0 0 0 0 0 0])
  ("nodes" .
   [26 0 0 0 0])
  ("free_node" .
   [6 0 0 0 0 0 0 0 0])
  ("$$" .
   [13 0])
  ("make_number_node" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2])
  ("statements" .
   [16 0 0 0 0 0 0 0 0 0])
  ("$2" .
   [3 0])
  ("print_node" .
   [11 0 0 0 0 0 0 0 0 0])
  ("printf" .
   [32 0 0 0 0 0])
  ("car" .
   [4 0 0])
  ("fibo" .
   [3 0 0 0])
  ("example-func" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("hello-world" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("auto-save-default" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("unless" .
   [1 0 0 0 0 0])
  ("display-graphic-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("hello" .
   [6 0 0 0 0])
  ("input" .
   [2 0 0 0 0])
  ("make-backup-files" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("custom-theme-" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("load-theme" .
   [2 0 0 0 0 0 0 0 0 0])
  ("nil" .
   [3 0 0])
  ("make-backup-file" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("setq" .
   [8 0 0 0])
  ("linum-mode" .
   [1 0 0 0 0 0 0 0 0 0])
  ("evil-insert" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("when" .
   [3 0 0 0])
  ("boundp" .
   [1 0 0 0 0 0])
  ("evil-normal-state-minor-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("print" .
   [34 0 0 0 0])
  ("bound-and-true-p" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("progn" .
   [1 0 0 0 0])
  ("require" .
   [2 0 0 0 0 0 0])
  ("linum-relative" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0 0])
  ("global-linum-mode" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("asdf" .
   [1 0 0 0])
  ("constructor" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("console" .
   [1 0 0 0 0 0 1])
  ("log" .
   [2 0 0])
  ("Example" .
   [1 0 0 0 0 0 0])
  ("div" .
   [1 0 0])
  ("not" .
   [4 0 0])
  ("if" .
   [2 0])
  ("evil-normal-state-entry-hook" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("evil-normal-state-map" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("load" .
   [1 0 0 0])
  ("add-to-list" .
   [1 0 0 0 0 0 0 0 0 0 1])
  ("custom-theme-load-path" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0])
  ("helm-config" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("add-hook" .
   [3 0 0 0 1 0 0 1])
  ("lisp-mode" .
   [1 0 0 0 0 0 0 0 0])
  ("lisp-mode-hook" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("enable-paredit-mode" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("let" .
   [1 0 0])
  ("defun" .
   [6 0 0 0 0])
  ("name" .
   [1 0 0 0])
  ("thing" .
   [1 0 0 0 0])
  ("example" .
   [5 0 0 0 0 0 0])
  ("fibonacci" .
   [0 0 8 2 1 0 0 0 0])
  ("return-from" .
   [1 0 0 0 0 0 2 0 0 0 0])
  ("n" .
   [4])
  ("root" .
   [7 0 0 0])
  ("t" .
   [1])
  ("type" .
   [5 0 0 0])
  ("STATEMENTLIST" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("BINOP" .
   [1 0 0 0 0])
  ("BOOL" .
   [1 0 0 0])
  ("NUMBER" .
   [1 0 0 0 0 0])
  ("parse_node" .
   [6 0 0 0 0 0 0 0 0 0])
  ("binopnode" .
   [6 0 0 0 0 0 0 0 0])
  ("left" .
   [3 0 0 0])
  ("right" .
   [3 0 0 0 0])
  ("boolean" .
   [1 0 0 0 0 0 0])
  ("pointer" .
   [3 0 0 0 0 0 0])
  ("VALUE_POINTER" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Object" .
   [8 0 0 0 0 0])
  ("make_pointer_object" .
   [1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("make_bool_object" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("boolnode" .
   [1 0 0 0 0 0 0 0])
  ("value" .
   [19 0 0 0 0])
  ("numbernode" .
   [4 0 0 0 0 0 0 0 0 0])
  ("null_object" .
   [3 0 0 0 0 1 0 0 0 0 0])
  ("free_object" .
   [4 0 0 0 0 1 0 0 0 0 1])
  ("object" .
   [15 0 0 0 0 0])
  ("make_list_object" .
   [0 0 0 0 0 0 0 0 0 1 3 0 0 0 0 0])
  ("list" .
   [9 0 0 0])
  ("List" .
   [7 0 0 0])
  ("previous" .
   [1 0 0 0 0 0 0 0])
  ("free_list" .
   [2 0 0 0 0 0 0 0 0])
  ("next" .
   [3 0 0 0])
  ("VALUE_LIST" .
   [2 0 0 0 0 0 0 0 0 0])
  ("make_list" .
   [1 0 0 0 0 0 0 0 0])
  ("PLUS" .
   [1 0 0 0])
  ("result" .
   [1 0 0 0 0 0])
  ("MINUS" .
   [1 0 0 0 0])
  ("make_number_object" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("test" .
   [1 0 0 0])
  ("TIMES" .
   [1 0 0 0 0])
  ("DIVIDE" .
   [1 0 0 0 0 0])
  ("number" .
   [1 0 0 0 0 0])
  ("Turn" .
   [1 0 0 0])))
